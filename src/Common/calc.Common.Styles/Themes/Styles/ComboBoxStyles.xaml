<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:calc.Common.Styles.Controls"
    xmlns:theme="clr-namespace:calc.Common.Styles">

    <ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Grid>
            <Border x:Name="Bd"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
                <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border x:Name="FocusBorder"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListSelectedBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListSelectedBorder}" />
                <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ListSelectedForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListMouseOverBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListMouseOverBorder}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsKeyboardFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListMouseOverBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListMouseOverBorder}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}" />
    </Style>
    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Border x:Name="splitBorder"
                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                Margin="0"
                HorizontalAlignment="Right"
                BorderBrush="Transparent"
                BorderThickness="1"
                SnapsToDevicePixels="true">
                <controls:XamlImage
                    Width="10"
                    Height="10"
                    Foreground="{theme:ThemeResource ResourceKey=GlyphForeground}"
                    Template="{DynamicResource Icon_Expand}" />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="templateRoot" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="templateRoot" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template" Value="{StaticResource ComboBoxToggleButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    Width="0"
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                VerticalOffset="-1">
                <Border x:Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{theme:ThemeResource ResourceKey=ContentBackground}"
                    BorderBrush="{theme:ThemeResource ResourceKey=ControlBorder}"
                    BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid"
                            RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle x:Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButtonStyle}" />
            <ContentPresenter x:Name="contentPresenter"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border x:Name="FocusBorder"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPresenter" Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="CaretBrush" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="SelectionBrush" Value="{theme:ThemeResource ResourceKey=ControlHighlightBackground}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    Width="0"
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                VerticalOffset="-1">
                <Border x:Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{theme:ThemeResource ResourceKey=ContentBackground}"
                    BorderBrush="{theme:ThemeResource ResourceKey=ControlBorder}"
                    BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid"
                            RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle x:Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButtonStyle}" />
            <Border x:Name="border"
                Grid.Column="0"
                Margin="{TemplateBinding BorderThickness}"
                Background="{theme:ThemeResource ResourceKey=ControlContentBackground}">
                <TextBox x:Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
            <Border x:Name="FocusBorder"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ControlBackground}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlBorder}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>